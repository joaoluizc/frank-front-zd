/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/8ap5uU6FxVw
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "../ui/button"
import { Avatar, AvatarImage, AvatarFallback } from "../ui/avatar"
import { Textarea } from "../ui/textarea"

export function Chat() {
  return (
    <div className="flex flex-col h-screen">
      <header className="bg-primary text-primary-foreground py-2 px-4 flex items-center justify-between shadow-md">
        <div className="flex items-center gap-4">
          <Button variant="ghost" size="icon" className="text-primary-foreground">
            <div className="w-5 h-5">
            <PlusIcon />
            </div>
            <span className="sr-only">New Chat</span>
          </Button>
          <Button variant="ghost" size="icon" className="text-primary-foreground">
            <div className="w-5 h-5">
            <MessageCircleIcon />
            </div>
            <span className="sr-only">Chat History</span>
          </Button>
        </div>
        <div className="flex items-center gap-4">
          <Button variant="ghost" size="icon" className="text-primary-foreground">
            <div className="w-5 h-5">
            <SettingsIcon />
            </div>
            <span className="sr-only">Settings</span>
          </Button>
          <Button variant="ghost" size="icon" className="text-primary-foreground">
            <div className="w-5 h-5">
            <CircleHelpIcon />
            </div>
            <span className="sr-only">Help</span>
          </Button>
        </div>
      </header>
      <div className="flex-1 overflow-auto p-4">
        <div className="grid gap-4">
          <div className="flex items-start gap-4">
            <Avatar className="w-10 h-10 border">
              <AvatarImage src="/placeholder-user.jpg" />
              <AvatarFallback>AC</AvatarFallback>
            </Avatar>
            <div className="grid gap-1 bg-muted p-3 rounded-lg max-w-[75%]">
              <div className="font-medium">Acme Inc</div>
              <div>Hey there! How can I help you today?</div>
              <div className="text-xs text-muted-foreground">2:39 PM</div>
            </div>
          </div>
          <div className="flex items-start gap-4 justify-end">
            <div className="grid gap-1 bg-primary text-primary-foreground p-3 rounded-lg max-w-[75%]">
              <div className="font-medium">You</div>
              <div>Hi there! I had a few questions about your product roadmap.</div>
              <div className="text-xs text-primary-foreground/80">2:40 PM</div>
            </div>
            <Avatar className="w-10 h-10 border">
              <AvatarImage src="/placeholder-user.jpg" />
              <AvatarFallback>AC</AvatarFallback>
            </Avatar>
          </div>
          <div className="flex items-start gap-4">
            <Avatar className="w-10 h-10 border">
              <AvatarImage src="/placeholder-user.jpg" />
              <AvatarFallback>AC</AvatarFallback>
            </Avatar>
            <div className="grid gap-1 bg-muted p-3 rounded-lg max-w-[75%]">
              <div className="font-medium">Acme Inc</div>
              <div>Sure, I'd be happy to discuss our product roadmap with you.</div>
              <div className="text-xs text-muted-foreground">2:41 PM</div>
            </div>
          </div>
        </div>
      </div>
      <div className="bg-muted p-2 flex items-center">
        <Textarea placeholder="Type your message..." className="flex-1 border-none focus:ring-0 resize-none" rows={1} />
        <Button variant="ghost" size="icon" className="text-muted-foreground">
          <div className="w-5 h-5">
          <SendIcon />
          </div>
          <span className="sr-only">Send</span>
        </Button>
      </div>
    </div>
  )
}

interface CircleHelpIconProps {
}

function CircleHelpIcon(props: CircleHelpIconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" />
      <path d="M12 17h.01" />
    </svg>
  )
}


interface MessageCircleIconProps {
  // Add any necessary props here
}

function MessageCircleIcon(props: MessageCircleIconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z" />
    </svg>
  )
}


interface PlusIconProps {
  // Add any necessary props here
}

function PlusIcon(props: PlusIconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}


interface SendIconProps {
  // Add any necessary props here
}

function SendIcon(props: SendIconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m22 2-7 20-4-9-9-4Z" />
      <path d="M22 2 11 13" />
    </svg>
  )
}


interface SettingsIconProps {
  // Add any necessary props here
}

function SettingsIcon(props: SettingsIconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


interface XIconProps {
  // Add any necessary props here
}

export function XIcon(props: XIconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
